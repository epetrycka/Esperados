(program skipBefore Saluton (instructions (defDict tutmonda variablo vortaro sum asigini { (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "jeden"))))))))) : (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom 1))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "dwa"))))))))) : (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom 2))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "trzy"))))))))) : (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom 3))))))))) }))
(instructions (defList tutmonda variablo listo result asigini [ ]))
(instructions (defList variablo listo keys asigini (getDictKeys slosiloj ( sum ))))
(instructions (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom keys))))))))) )))
(instructions (forEachLoop por ciu key en keys { (actions (instructions (addToList result aldoni (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom key)))))))))))) }))
(instructions (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom result))))))))) ))) Adiau skipAfter <EOF>)