(program skipBefore Saluton (instructions (variableExpr variablo x asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom 5)))) granda (additionExpr (multiExpr (exponExpr (atom 2)))))))))))
(instructions (condition (ifExpr se ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom x))))))))) ) { (actions (instructions (variableExpr tutmonda variablo result asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "if"))))))))))))
(actions (instructions (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "aha"))))))))) )))) })
(elifExpr alie se ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom malvero))))))))) ) { (actions (instructions (variableExpr tutmonda variablo result asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "elif"))))))))))))
(actions (instructions (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "aha2"))))))))) )))) })
(elseExpr alie { (actions (instructions (variableExpr tutmonda variablo result asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "else"))))))))))))
(actions (instructions (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "aha3"))))))))) )))) }))) Adiau skipAfter <EOF>)