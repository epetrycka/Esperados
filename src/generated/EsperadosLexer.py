# Generated from ../Grammar/Esperados.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,48,423,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,
        1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,1,3,1,3,
        1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,
        1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,
        1,9,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,1,10,1,11,
        1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,
        1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,
        1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,15,
        1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,21,1,21,
        1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,
        1,24,1,24,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,
        1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,30,
        1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,
        1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,
        1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,33,
        1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
        1,38,1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,40,
        4,40,352,8,40,11,40,12,40,353,1,41,1,41,1,41,1,42,1,42,1,42,5,42,
        362,8,42,10,42,12,42,365,9,42,1,42,1,42,1,43,4,43,370,8,43,11,43,
        12,43,371,1,43,1,43,4,43,376,8,43,11,43,12,43,377,1,44,1,44,5,44,
        382,8,44,10,44,12,44,385,9,44,1,45,1,45,1,45,1,45,5,45,391,8,45,
        10,45,12,45,394,9,45,1,45,1,45,1,46,1,46,1,46,1,46,5,46,402,8,46,
        10,46,12,46,405,9,46,1,46,1,46,1,46,1,46,1,46,1,47,4,47,413,8,47,
        11,47,12,47,414,1,47,1,47,1,48,3,48,420,8,48,1,48,1,48,0,0,49,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
        14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
        25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,
        36,73,37,75,38,77,39,79,40,81,41,83,0,85,42,87,43,89,44,91,45,93,
        46,95,47,97,48,1,0,8,1,0,48,57,8,0,34,34,47,47,92,92,98,98,102,102,
        110,110,114,114,116,116,4,0,10,10,13,13,34,34,92,92,2,0,65,90,97,
        122,3,0,48,57,65,90,97,122,2,0,10,10,13,13,2,0,58,58,80,80,3,0,9,
        10,13,13,32,32,431,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,
        0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,
        0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,
        0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,
        0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,
        0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,
        0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,
        0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,
        0,0,79,1,0,0,0,0,81,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,
        0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,1,99,1,0,0,
        0,3,107,1,0,0,0,5,113,1,0,0,0,7,120,1,0,0,0,9,129,1,0,0,0,11,132,
        1,0,0,0,13,137,1,0,0,0,15,145,1,0,0,0,17,149,1,0,0,0,19,153,1,0,
        0,0,21,161,1,0,0,0,23,168,1,0,0,0,25,177,1,0,0,0,27,185,1,0,0,0,
        29,192,1,0,0,0,31,199,1,0,0,0,33,209,1,0,0,0,35,211,1,0,0,0,37,213,
        1,0,0,0,39,215,1,0,0,0,41,217,1,0,0,0,43,219,1,0,0,0,45,221,1,0,
        0,0,47,223,1,0,0,0,49,228,1,0,0,0,51,236,1,0,0,0,53,242,1,0,0,0,
        55,250,1,0,0,0,57,256,1,0,0,0,59,265,1,0,0,0,61,272,1,0,0,0,63,282,
        1,0,0,0,65,295,1,0,0,0,67,311,1,0,0,0,69,315,1,0,0,0,71,318,1,0,
        0,0,73,321,1,0,0,0,75,330,1,0,0,0,77,338,1,0,0,0,79,344,1,0,0,0,
        81,351,1,0,0,0,83,355,1,0,0,0,85,358,1,0,0,0,87,369,1,0,0,0,89,379,
        1,0,0,0,91,386,1,0,0,0,93,397,1,0,0,0,95,412,1,0,0,0,97,419,1,0,
        0,0,99,100,5,83,0,0,100,101,5,97,0,0,101,102,5,108,0,0,102,103,5,
        117,0,0,103,104,5,116,0,0,104,105,5,111,0,0,105,106,5,110,0,0,106,
        2,1,0,0,0,107,108,5,65,0,0,108,109,5,100,0,0,109,110,5,105,0,0,110,
        111,5,97,0,0,111,112,5,117,0,0,112,4,1,0,0,0,113,114,5,115,0,0,114,
        115,5,107,0,0,115,116,5,114,0,0,116,117,5,105,0,0,117,118,5,98,0,
        0,118,119,5,105,0,0,119,6,1,0,0,0,120,121,5,118,0,0,121,122,5,97,
        0,0,122,123,5,114,0,0,123,124,5,105,0,0,124,125,5,97,0,0,125,126,
        5,98,0,0,126,127,5,108,0,0,127,128,5,111,0,0,128,8,1,0,0,0,129,130,
        5,115,0,0,130,131,5,101,0,0,131,10,1,0,0,0,132,133,5,97,0,0,133,
        134,5,108,0,0,134,135,5,105,0,0,135,136,5,101,0,0,136,12,1,0,0,0,
        137,138,5,97,0,0,138,139,5,108,0,0,139,140,5,105,0,0,140,141,5,101,
        0,0,141,142,5,32,0,0,142,143,5,115,0,0,143,144,5,101,0,0,144,14,
        1,0,0,0,145,146,5,112,0,0,146,147,5,111,0,0,147,148,5,114,0,0,148,
        16,1,0,0,0,149,150,5,103,0,0,150,151,5,105,0,0,151,152,5,115,0,0,
        152,18,1,0,0,0,153,154,5,97,0,0,154,155,5,115,0,0,155,156,5,105,
        0,0,156,157,5,103,0,0,157,158,5,105,0,0,158,159,5,110,0,0,159,160,
        5,105,0,0,160,20,1,0,0,0,161,162,5,97,0,0,162,163,5,108,0,0,163,
        164,5,100,0,0,164,165,5,111,0,0,165,166,5,110,0,0,166,167,5,105,
        0,0,167,22,1,0,0,0,168,169,5,115,0,0,169,170,5,117,0,0,170,171,5,
        98,0,0,171,172,5,116,0,0,172,173,5,114,0,0,173,174,5,97,0,0,174,
        175,5,104,0,0,175,176,5,105,0,0,176,24,1,0,0,0,177,178,5,109,0,0,
        178,179,5,117,0,0,179,180,5,108,0,0,180,181,5,116,0,0,181,182,5,
        105,0,0,182,183,5,103,0,0,183,184,5,105,0,0,184,26,1,0,0,0,185,186,
        5,100,0,0,186,187,5,105,0,0,187,188,5,118,0,0,188,189,5,105,0,0,
        189,190,5,100,0,0,190,191,5,105,0,0,191,28,1,0,0,0,192,193,5,109,
        0,0,193,194,5,111,0,0,194,195,5,100,0,0,195,196,5,117,0,0,196,197,
        5,108,0,0,197,198,5,111,0,0,198,30,1,0,0,0,199,200,5,105,0,0,200,
        201,5,110,0,0,201,202,5,116,0,0,202,203,5,101,0,0,203,204,5,110,
        0,0,204,205,5,115,0,0,205,206,5,105,0,0,206,207,5,103,0,0,207,208,
        5,105,0,0,208,32,1,0,0,0,209,210,5,40,0,0,210,34,1,0,0,0,211,212,
        5,41,0,0,212,36,1,0,0,0,213,214,5,123,0,0,214,38,1,0,0,0,215,216,
        5,125,0,0,216,40,1,0,0,0,217,218,5,44,0,0,218,42,1,0,0,0,219,220,
        5,46,0,0,220,44,1,0,0,0,221,222,5,59,0,0,222,46,1,0,0,0,223,224,
        5,118,0,0,224,225,5,101,0,0,225,226,5,114,0,0,226,227,5,101,0,0,
        227,48,1,0,0,0,228,229,5,109,0,0,229,230,5,97,0,0,230,231,5,108,
        0,0,231,232,5,118,0,0,232,233,5,101,0,0,233,234,5,114,0,0,234,235,
        5,111,0,0,235,50,1,0,0,0,236,237,5,104,0,0,237,238,5,97,0,0,238,
        239,5,108,0,0,239,240,5,116,0,0,240,241,5,117,0,0,241,52,1,0,0,0,
        242,243,5,100,0,0,243,244,5,97,0,0,244,245,5,117,0,0,245,246,5,114,
        0,0,246,247,5,105,0,0,247,248,5,103,0,0,248,249,5,105,0,0,249,54,
        1,0,0,0,250,251,5,101,0,0,251,252,5,103,0,0,252,253,5,97,0,0,253,
        254,5,108,0,0,254,255,5,97,0,0,255,56,1,0,0,0,256,257,5,110,0,0,
        257,258,5,101,0,0,258,259,5,32,0,0,259,260,5,101,0,0,260,261,5,103,
        0,0,261,262,5,97,0,0,262,263,5,108,0,0,263,264,5,97,0,0,264,58,1,
        0,0,0,265,266,5,103,0,0,266,267,5,114,0,0,267,268,5,97,0,0,268,269,
        5,110,0,0,269,270,5,100,0,0,270,271,5,97,0,0,271,60,1,0,0,0,272,
        273,5,109,0,0,273,274,5,97,0,0,274,275,5,108,0,0,275,276,5,103,0,
        0,276,277,5,114,0,0,277,278,5,97,0,0,278,279,5,110,0,0,279,280,5,
        100,0,0,280,281,5,97,0,0,281,62,1,0,0,0,282,283,5,103,0,0,283,284,
        5,114,0,0,284,285,5,97,0,0,285,286,5,110,0,0,286,287,5,100,0,0,287,
        288,5,97,0,0,288,289,5,32,0,0,289,290,5,101,0,0,290,291,5,103,0,
        0,291,292,5,97,0,0,292,293,5,108,0,0,293,294,5,97,0,0,294,64,1,0,
        0,0,295,296,5,109,0,0,296,297,5,97,0,0,297,298,5,108,0,0,298,299,
        5,103,0,0,299,300,5,114,0,0,300,301,5,97,0,0,301,302,5,110,0,0,302,
        303,5,100,0,0,303,304,5,97,0,0,304,305,5,32,0,0,305,306,5,101,0,
        0,306,307,5,103,0,0,307,308,5,97,0,0,308,309,5,108,0,0,309,310,5,
        97,0,0,310,66,1,0,0,0,311,312,5,107,0,0,312,313,5,97,0,0,313,314,
        5,106,0,0,314,68,1,0,0,0,315,316,5,97,0,0,316,317,5,117,0,0,317,
        70,1,0,0,0,318,319,5,110,0,0,319,320,5,101,0,0,320,72,1,0,0,0,321,
        322,5,116,0,0,322,323,5,117,0,0,323,324,5,116,0,0,324,325,5,109,
        0,0,325,326,5,111,0,0,326,327,5,110,0,0,327,328,5,100,0,0,328,329,
        5,97,0,0,329,74,1,0,0,0,330,331,5,101,0,0,331,332,5,110,0,0,332,
        333,5,116,0,0,333,334,5,106,0,0,334,335,5,101,0,0,335,336,5,114,
        0,0,336,337,5,111,0,0,337,76,1,0,0,0,338,339,5,102,0,0,339,340,5,
        108,0,0,340,341,5,111,0,0,341,342,5,115,0,0,342,343,5,105,0,0,343,
        78,1,0,0,0,344,345,5,115,0,0,345,346,5,110,0,0,346,347,5,117,0,0,
        347,348,5,114,0,0,348,349,5,111,0,0,349,80,1,0,0,0,350,352,7,0,0,
        0,351,350,1,0,0,0,352,353,1,0,0,0,353,351,1,0,0,0,353,354,1,0,0,
        0,354,82,1,0,0,0,355,356,5,92,0,0,356,357,7,1,0,0,357,84,1,0,0,0,
        358,363,5,34,0,0,359,362,3,83,41,0,360,362,8,2,0,0,361,359,1,0,0,
        0,361,360,1,0,0,0,362,365,1,0,0,0,363,361,1,0,0,0,363,364,1,0,0,
        0,364,366,1,0,0,0,365,363,1,0,0,0,366,367,5,34,0,0,367,86,1,0,0,
        0,368,370,7,0,0,0,369,368,1,0,0,0,370,371,1,0,0,0,371,369,1,0,0,
        0,371,372,1,0,0,0,372,373,1,0,0,0,373,375,5,46,0,0,374,376,7,0,0,
        0,375,374,1,0,0,0,376,377,1,0,0,0,377,375,1,0,0,0,377,378,1,0,0,
        0,378,88,1,0,0,0,379,383,7,3,0,0,380,382,7,4,0,0,381,380,1,0,0,0,
        382,385,1,0,0,0,383,381,1,0,0,0,383,384,1,0,0,0,384,90,1,0,0,0,385,
        383,1,0,0,0,386,387,5,58,0,0,387,388,5,79,0,0,388,392,1,0,0,0,389,
        391,8,5,0,0,390,389,1,0,0,0,391,394,1,0,0,0,392,390,1,0,0,0,392,
        393,1,0,0,0,393,395,1,0,0,0,394,392,1,0,0,0,395,396,6,45,0,0,396,
        92,1,0,0,0,397,398,5,58,0,0,398,399,5,80,0,0,399,403,1,0,0,0,400,
        402,8,6,0,0,401,400,1,0,0,0,402,405,1,0,0,0,403,401,1,0,0,0,403,
        404,1,0,0,0,404,406,1,0,0,0,405,403,1,0,0,0,406,407,5,80,0,0,407,
        408,5,58,0,0,408,409,1,0,0,0,409,410,6,46,0,0,410,94,1,0,0,0,411,
        413,7,7,0,0,412,411,1,0,0,0,413,414,1,0,0,0,414,412,1,0,0,0,414,
        415,1,0,0,0,415,416,1,0,0,0,416,417,6,47,0,0,417,96,1,0,0,0,418,
        420,5,13,0,0,419,418,1,0,0,0,419,420,1,0,0,0,420,421,1,0,0,0,421,
        422,5,10,0,0,422,98,1,0,0,0,11,0,353,361,363,371,377,383,392,403,
        414,419,1,6,0,0
    ]

class EsperadosLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    GREETING = 1
    GOODBYE = 2
    PRINT = 3
    VARDEF = 4
    IF = 5
    ELSE = 6
    ELIF = 7
    FOR = 8
    WHILE = 9
    ASG = 10
    ADD = 11
    SUB = 12
    MULT = 13
    DIV = 14
    MOD = 15
    EXPON = 16
    LP = 17
    RP = 18
    LC = 19
    RC = 20
    COMMA = 21
    DOT = 22
    SEMICOLON = 23
    TRUE = 24
    FALSE = 25
    BREAK = 26
    CONTINUE = 27
    EQUAL = 28
    INEQUAL = 29
    GREATER = 30
    LESS = 31
    EGREATER = 32
    ELESS = 33
    AND = 34
    OR = 35
    NOT = 36
    GLOBAL = 37
    INTTYPE = 38
    FLOATTYPE = 39
    STRINGTYPE = 40
    INT = 41
    STRING = 42
    FLOAT = 43
    NAME = 44
    COMMENT = 45
    COMMENTBLOCK = 46
    WS = 47
    NL = 48

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'Saluton'", "'Adiau'", "'skribi'", "'variablo'", "'se'", "'alie'", 
            "'alie se'", "'por'", "'gis'", "'asigini'", "'aldoni'", "'subtrahi'", 
            "'multigi'", "'dividi'", "'modulo'", "'intensigi'", "'('", "')'", 
            "'{'", "'}'", "','", "'.'", "';'", "'vere'", "'malvero'", "'haltu'", 
            "'daurigi'", "'egala'", "'ne egala'", "'granda'", "'malgranda'", 
            "'granda egala'", "'malgranda egala'", "'kaj'", "'au'", "'ne'", 
            "'tutmonda'", "'entjero'", "'flosi'", "'snuro'" ]

    symbolicNames = [ "<INVALID>",
            "GREETING", "GOODBYE", "PRINT", "VARDEF", "IF", "ELSE", "ELIF", 
            "FOR", "WHILE", "ASG", "ADD", "SUB", "MULT", "DIV", "MOD", "EXPON", 
            "LP", "RP", "LC", "RC", "COMMA", "DOT", "SEMICOLON", "TRUE", 
            "FALSE", "BREAK", "CONTINUE", "EQUAL", "INEQUAL", "GREATER", 
            "LESS", "EGREATER", "ELESS", "AND", "OR", "NOT", "GLOBAL", "INTTYPE", 
            "FLOATTYPE", "STRINGTYPE", "INT", "STRING", "FLOAT", "NAME", 
            "COMMENT", "COMMENTBLOCK", "WS", "NL" ]

    ruleNames = [ "GREETING", "GOODBYE", "PRINT", "VARDEF", "IF", "ELSE", 
                  "ELIF", "FOR", "WHILE", "ASG", "ADD", "SUB", "MULT", "DIV", 
                  "MOD", "EXPON", "LP", "RP", "LC", "RC", "COMMA", "DOT", 
                  "SEMICOLON", "TRUE", "FALSE", "BREAK", "CONTINUE", "EQUAL", 
                  "INEQUAL", "GREATER", "LESS", "EGREATER", "ELESS", "AND", 
                  "OR", "NOT", "GLOBAL", "INTTYPE", "FLOATTYPE", "STRINGTYPE", 
                  "INT", "ESC", "STRING", "FLOAT", "NAME", "COMMENT", "COMMENTBLOCK", 
                  "WS", "NL" ]

    grammarFileName = "Esperados.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


