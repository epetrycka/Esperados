(program Saluton (instructions (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "Program\n zaczyna sie: "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "teraz "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "-> 0"))))))))) )))
(action (variableExpr variablo x asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom 5)))))))))))
(action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "Zmienna x ma wartosc: "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom x))))))))) )))
(action (variableExpr variablo y asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "hello")))))))))))
(action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "Zmienna y ma wartosc: "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom y))))))))) )))
(action (variableExpr variablo z asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom x)) multigi (exponentialExpr (atom 3.5))))))))) ))))))))))))
(action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "Zmienna z ma wartosc x*3.5: "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom z))))))))) )))
(action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "Wartosc z%2: "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom z)) modulo (exponentialExpr (atom 2))))))))) )))))))))) )))
(action (variableExpr variablo false asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom 4)))) egala (additionExpr (multiplicationExpr (exponentialExpr (atom 5))))))))) ))))))))))))
(action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "Czy 4 jest rowne 5? "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom false))))))))) )))
(action (variableExpr variablo true asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "aha")))) egala (additionExpr (multiplicationExpr (exponentialExpr (atom "aha"))))))))) ))))))))))))
(action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "Czy aha to to samo co aha? "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom true))))))))) )))
(action (condition se ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom 5)))) granda (additionExpr (multiplicationExpr (exponentialExpr (atom 2))))))))) ))))))) kaj (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom 5)))) granda (additionExpr (multiplicationExpr (exponentialExpr (atom 9))))))))) )))))))))) )))))))) au (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom vere))))))))) ) { (instructions (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "Wypisuje sie jesli 5 > 2 AND 5 > 9 OR true"))))))))) )))) }))
(action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiplicationExpr (exponentialExpr (atom "ala"))) aldoni (multiplicationExpr (exponentialExpr (atom " ma kota"))))))))) )))
(goodbye Adiau <EOF>)) <EOF>)