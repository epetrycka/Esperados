<<<<<<< HEAD
(program Saluton (instructions (action (variableExpr variablo x (type entjero) asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom 0)))))))))))
=======
(program Saluton (instructions (action (variableExpr variablo x (type entjero) asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom 2)))))))))))
>>>>>>> main
(action (variableExpr variablo y (type flosi) asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom 1.5)))))))))))
(action (variableExpr variablo tekst (type snuro) asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Czesc")))))))))))
(action (variableExpr tutmonda variablo licznik (type entjero) asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom 10)))))))))))
(action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Witaj "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom tekst))))))))) )))
(action (forLoop por ( i ; 0 ; 5 ; 1 ) { (loopInstructions (loopAction (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Iteracja:"))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom i))))))))) ))))
(loopAction (action (condition (ifExpr se ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom i)))) granda egala (additionExpr (multiExpr (exponExpr (atom 2))))))))) ) { (instructions (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "i jest wieksze lub rowne 2"))))))))) )))) })
(elifExpr alie se ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom i)))) ne egala (additionExpr (multiExpr (exponExpr (atom 1))))))))) ) { (instructions (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "i nie jest rowne 1"))))))))) )))) })
(elseExpr alie { (instructions (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "i to 1"))))))))) )))) }))))
(loopAction (action (whileLoop gis ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom i)))) malgranda (additionExpr (multiExpr (exponExpr (atom 2))))))))) ) { (loopInstructions (loopAction (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Petla while, i ="))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom i))))))))) ))))
(loopAction haltu)) })))
(loopAction daurigi)) }))
(action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Koniec petli"))))))))) )))
<<<<<<< HEAD
(action (functionDef difini salutu ( (parameters (type snuro) : nomo) ) { (funDefInstructions (funDefAction (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Saluton: "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom nomo))))))))) ))))) }))
(action (functionCall funcio salutu ( nomo = (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Jol"))))))))) )))
=======
(action (functionDef difini salutu ( (parameters (type snuro) : nomo) ) { (funDefInstructions (funDefAction (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Saluton: "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom nomo))))))))) ))))
(funDefAction (returnStmt reveni))
(funDefAction (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Lol"))))))))) ))))) }))
(action (functionCall funcio salutu ( nomo = (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Jol"))))))))) )))
(action (deleteStmt forigi x))
>>>>>>> main
(goodbye Adiau <EOF>)) <EOF>)