(program Saluton (instructions (action (defList variablo listo Lista asigini [ ]))
(action (whileLoop gis ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom vere))))))))) ) { (loopInstructions (loopAction (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Podaj imie: "))))))))) ))))
(loopAction (action (inputExpr variablo text asigini inputo ( ))))
(loopAction (action (condition (ifExpr se ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom text)))) egala (additionExpr (multiExpr (exponExpr (atom "0"))))))))) ) { (loopInstructions (loopAction (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Koniec listy"))))))))) ))))
(loopAction haltu)) }))))
(loopAction (action (addToList Lista aldoni (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom text))))))))))))) }))
(action (functionDef difini salutu ( (parameters (type listo) : names) ) { (funDefInstructions (funDefAction (action (forEachLoop por ciu name en names { (loopInstructions (loopAction (action (condition (ifExpr se ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom names)))) egala (additionExpr (multiExpr (exponExpr (atom ""))))))))) ) { (loopInstructions (loopAction (returnStmt reveni (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom malvero)))))))))))) })
(elseExpr alie { (loopInstructions (loopAction (action (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "Saluton: "))))))))) , (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom name))))))))) ))))
(loopAction (returnStmt reveni (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom vere)))))))))))) }))))) })))) }))
(action (functionCall funcio salutu ( names = (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom Lista))))))))) )))
(goodbye Adiau <EOF>)) <EOF>)