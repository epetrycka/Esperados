(program skipBefore Saluton (instructions (functionDef difini fun ( (parameters (type entjero) : a) ) { (actions (instructions (condition (ifExpr se ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom a)))) granda egala (additionExpr (multiExpr (exponExpr (atom 0))))))))) ) { (actions (instructions (returnStmt reveni (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom vere)))))))))))) })
(elseExpr alie { (actions (instructions (returnStmt reveni (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom malvero)))))))))))) })))) }))
(instructions (variableExpr variablo a asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom -3)))))))))))
(instructions (condition (ifExpr se ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom (functionCall funcio fun ( a = (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom a))))))))) ))))))))))) ) { (actions (instructions (variableExpr tutmonda variablo result asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "+")))))))))))) })
(elseExpr alie { (actions (instructions (variableExpr tutmonda variablo result asigini (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom "-")))))))))))) })))
(instructions (printExpr skribi ( (expr (orExpr (andExpr (notExpr (comparisonExpr (additionExpr (multiExpr (exponExpr (atom result))))))))) ))) Adiau skipAfter <EOF>)